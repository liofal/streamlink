name: Python CI with Kaniko (Beta)

on:
  push:
    branches: [ beta ]
  pull_request:
    branches: [ beta ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov

    - name: Format code with black
      run: |
        pip install black
        black . --check

    - name: Lint with flake8
      run: |
        pip install flake8
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

    - name: Scan for vulnerabilities
      run: |
        pip install safety
        safety check

    - name: Upgrade dependencies
      run: |
        pip install pip-tools
        pip-compile --upgrade

    - name: Run tests after upgrade deps
      run: |
        pytest --cov=./ --cov-report=term --cov-fail-under=80

    - name: Upgrade dependencies and commit changes
      run: |
        git config --global user.name 'CI Bot'
        git config --global user.email 'ci-bot@example.com'
        git add requirements.txt
        git diff --staged --quiet || git commit -m "ci: upgrade dependencies" || echo "No changes to commit"
        git push origin HEAD:${{ github.head_ref }}) || echo "No changes to push"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Bump version and push tag
      if: github.ref == 'refs/heads/beta'
      uses: anothrNick/github-tag-action@1.36.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        DEFAULT_BUMP: patch
        RELEASE_BRANCHES: beta
        WITH_V: true
      id: tag

    - name: Log in to Docker Hub
      run: echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      
    - name: Build and push Docker image with Kaniko
      uses: GoogleContainerTools/kaniko-action@v1.0.0
      with:
        image: liofal/streamlink:${{ steps.tag.outputs.new_tag }}
        context: .
        dockerfile: ./Dockerfile
        destination: liofal/streamlink:${{ steps.tag.outputs.new_tag }}
        cache: true
      env:
        DOCKER_CONFIG: /kaniko/.docker/
