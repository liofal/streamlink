apiVersion: apps/v1
kind: Deployment
metadata:
  name: streamlink-{{ .Values.streamer.name }}
  
spec:
  replicas: 1
  selector:
    matchLabels:
      app: streamlink-{{ .Values.streamer.name }}
  template: 
    metadata:
      labels:
        app: streamlink-{{ .Values.streamer.name }}
    spec:
      serviceAccountName: streamlink-{{ .Values.streamer.name }}
      restartPolicy: Always
      containers:
      - name: streamlink-{{ .Values.streamer.name }}
        image: "{{ .Values.image.streamlink.repository }}/{{ .Values.image.streamlink.name }}:{{ .Values.image.streamlink.tag }}"
        imagePullPolicy: {{ .Values.image.streamlink.pullPolicy }}
        envFrom:
        - configMapRef:
            name: streamlink-config-{{ .Values.streamer.name }}
        volumeMounts:
        - name: download-volume
          mountPath: /app/download
      
      - name: ffmpeg-{{ .Values.streamer.name }}
        image: "{{ .Values.image.ffmpeg.repository }}/{{ .Values.image.ffmpeg.name }}:{{ .Values.image.ffmpeg.tag }}"
        imagePullPolicy: {{ .Values.image.ffmpeg.pullPolicy }}
        env:
        - name: SLEEPTIME
          value: "{{ .Values.ffmpeg.sleeptime }}"
        - name: WORKDIR
          value: "{{ .Values.ffmpeg.workdir }}"
        volumeMounts:
        - name: download-volume
          mountPath: /app/download
     
      volumes:
      - name: download-volume
        nfs:
          server: {{ .Values.nfs.server }}
          path: {{ .Values.nfs.path }}
